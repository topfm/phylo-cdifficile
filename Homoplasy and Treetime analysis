#Homoplasy analysis on C. difficile whole genome assemblies using Treetime.

# making vcf of core gene alignment using snp-sites. It will determine SNPs in each genome as compared to the reference. 
#input.fasta is an alignment file of all the whole genomes of C. difficile in my dataset, including the reference strain assembled genome.

mtopf@BaseByte:/opt/PepPrograms/snp_sites-2.0.3/src/snp-sites -v input.fasta 
#now we have the vcf of the alignment. The snp-sites prints a .vcf file as output.

#Next, we need to remove gaps. From our assembly pipeline, "gaps" happen when the assembler is not sure of the nucleic acid identity. It puts in a "?"
#For homoplasy analysis, we want to remove the gaps, otherwise, it will count the "?" as a homoplasy. 

#note: This needs python 2 to run. 
mtopf@BaseByte:~/temp-mtopf/2021.04.20_Homoplasy$ python2 ../scripts/formatConverters/gaplessVCF.py input.fasta.vcf input.fasta
#Yay! now we have a vcf file that has no gaps. Next, use TreeTime to count homoplasies and make a time-scaled tree. 
#export pythonpath
export PYTHONPATH=../scripts/treetime/bin/treetime
#run treetime homoplasy
treetime homoplasy --aln gapless.vcf --vcf-reference /opt/data/cdiff/R20291.fasta --tree tree.tree --rescale 0.0147 --detailed -n 300 > homoplasy.out
#check homoplasy file to determine if snp positions of interest have homoplasy
cat homoplasy.out
#run treetime
treetime --aln input.fasta --tree tree.tree --dates He_dates -out_dir treetime_out/
#convert tree to newick so it can be used in R analysis. 
mtopf@BaseByte:/opt/PepPrograms/Dendroscope/dendroscope
#in dendroscope, open treetime_out/tree.out 
#file --> export as Newick
#save!
